// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TemplateApiProject.Application.Data.Context;

#nullable disable

namespace TemplateApiProject.Infra.Data.Migrations
{
    [DbContext(typeof(TemplateApiProjectDataContext))]
    [Migration("20220312232948_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1, 1);

            modelBuilder.Entity("TemplateApiProject.Domain.Entity.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5cafc63f-4bf4-46f5-9615-d343f34071e9"),
                            Birthdate = new DateTime(2022, 3, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            CreatedAt = new DateTime(2022, 3, 12, 20, 29, 48, 123, DateTimeKind.Local).AddTicks(8572),
                            FirstName = "User",
                            Gender = 1,
                            IsActive = true,
                            LastName = "Admin"
                        });
                });

            modelBuilder.Entity("TemplateApiProject.Domain.Entity.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("TemplateApiProject.Domain.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Profile")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f402ae93-cfc0-41fa-8b48-a445edd2b81c"),
                            CreatedAt = new DateTime(2022, 3, 12, 20, 29, 48, 131, DateTimeKind.Local).AddTicks(4402),
                            IsActive = true,
                            Password = "AP8VfOkvQciXQkRl6DqkOPrcHfe7ycNGCkSm8ynYjnqP",
                            PersonId = new Guid("5cafc63f-4bf4-46f5-9615-d343f34071e9"),
                            Profile = 1,
                            Username = "admin@admin.com"
                        });
                });

            modelBuilder.Entity("TemplateApiProject.Domain.Entity.Person", b =>
                {
                    b.OwnsOne("TemplateApiProject.Domain.Entity.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Neighborhood")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Number")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");

                            b1.HasData(
                                new
                                {
                                    PersonId = new Guid("5cafc63f-4bf4-46f5-9615-d343f34071e9"),
                                    City = "Admin",
                                    Country = "Brazil",
                                    Neighborhood = "Admin",
                                    Number = "0",
                                    State = "Admin",
                                    Street = "Admin",
                                    ZipCode = "00000-000"
                                });
                        });

                    b.OwnsOne("TemplateApiProject.Domain.Entity.ValueObjects.Contact", "Contact", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CellPhone")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Facebook")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Instagram")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PhoneNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Twitter")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");

                            b1.HasData(
                                new
                                {
                                    PersonId = new Guid("5cafc63f-4bf4-46f5-9615-d343f34071e9"),
                                    Email = "admin@admin.com"
                                });
                        });

                    b.OwnsOne("TemplateApiProject.Domain.Entity.ValueObjects.Documentation", "Documentation", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CPF")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("RG")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");

                            b1.HasData(
                                new
                                {
                                    PersonId = new Guid("5cafc63f-4bf4-46f5-9615-d343f34071e9"),
                                    CPF = "00000000000",
                                    RG = "000000000"
                                });
                        });

                    b.Navigation("Address");

                    b.Navigation("Contact");

                    b.Navigation("Documentation");
                });

            modelBuilder.Entity("TemplateApiProject.Domain.Entity.User", b =>
                {
                    b.HasOne("TemplateApiProject.Domain.Entity.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });
#pragma warning restore 612, 618
        }
    }
}
